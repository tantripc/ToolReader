<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="apdung" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="banchuachonsheet" xml:space="preserve">
    <value>You haven't selected the sheet</value>
  </data>
  <data name="bancochacchan" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="capnhat" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="capnhatdonvi" xml:space="preserve">
    <value>Update team</value>
  </data>
  <data name="capnhatdonvithanhcong" xml:space="preserve">
    <value>Unit update successful</value>
  </data>
  <data name="chinhanhseduocdichuyenlentren" xml:space="preserve">
    <value>The branch will be moved up</value>
  </data>
  <data name="chinhanhseduocdichuyenxuongduoi" xml:space="preserve">
    <value>The branch will be moved down</value>
  </data>
  <data name="chinhsua" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="chitiet" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="chonfiledinhkem" xml:space="preserve">
    <value>Select attachment</value>
  </data>
  <data name="chonsheet" xml:space="preserve">
    <value>Select sheet</value>
  </data>
  <data name="danhsachdonvi" xml:space="preserve">
    <value>List of teams</value>
  </data>
  <data name="dichuyenlen" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="dichuyenlentrenthanhcong" xml:space="preserve">
    <value>Successfully moved up</value>
  </data>
  <data name="dichuyenxuong" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="dichuyenxuongduoithanhcong" xml:space="preserve">
    <value>Successfully moved down</value>
  </data>
  <data name="dong" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="dongf" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="dongy" xml:space="preserve">
    <value>Agree</value>
  </data>
  <data name="filedinhkem" xml:space="preserve">
    <value>Attached file</value>
  </data>
  <data name="huy" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ketquathaotac" xml:space="preserve">
    <value>Result of manipulation</value>
  </data>
  <data name="khoahoc1" xml:space="preserve">
    <value>Course</value>
  </data>
  <data name="loctheomadonvi" xml:space="preserve">
    <value>Filter by team code</value>
  </data>
  <data name="loctheotendonvi" xml:space="preserve">
    <value>Filter by team name</value>
  </data>
  <data name="loidocghicosodulieu" xml:space="preserve">
    <value>Error reading from database</value>
  </data>
  <data name="madonvi" xml:space="preserve">
    <value>Unit code</value>
  </data>
  <data name="nhapdulieu" xml:space="preserve">
    <value>Insert information</value>
  </data>
  <data name="quaylai" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="sodongdulieubiloi" xml:space="preserve">
    <value>There are &lt;b&gt; __numerror__ &lt;/b&gt; faulty datastream</value>
  </data>
  <data name="soluonguser" xml:space="preserve">
    <value>Users number</value>
  </data>
  <data name="taikhoan" xml:space="preserve">
    <value>Tài khoản</value>
  </data>
  <data name="taimauexcel" xml:space="preserve">
    <value>Dowload template Excel</value>
  </data>
  <data name="taptinkhongdungdinhdang" xml:space="preserve">
    <value>The file isn't in correct format</value>
  </data>
  <data name="taptinkhonghotro" xml:space="preserve">
    <value>File not supported</value>
  </data>
  <data name="tendonvi" xml:space="preserve">
    <value>Team name</value>
  </data>
  <data name="themmoi" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="themmoidonvi" xml:space="preserve">
    <value>Add new team</value>
  </data>
  <data name="themmoidonvithanhcong" xml:space="preserve">
    <value>Add new team successfully</value>
  </data>
  <data name="themmoidonvitufile" xml:space="preserve">
    <value>Add new team from file</value>
  </data>
  <data name="themmoithanhcongdongdulieu" xml:space="preserve">
    <value>Successfully added new &lt;b&gt; __numok__ &lt;/b&gt; data lines</value>
  </data>
  <data name="themtufile" xml:space="preserve">
    <value>Add from file</value>
  </data>
  <data name="thongbao" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="thongtindonvisebixoakhoihethong" xml:space="preserve">
    <value>Team information will be deleted from the system</value>
  </data>
  <data name="trangthai" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="xemchitiet" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="xemthongtindonvi" xml:space="preserve">
    <value>View team information</value>
  </data>
  <data name="xoa" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="xoadonvithanhcong" xml:space="preserve">
    <value>Successfully deleted the team</value>
  </data>
  <data name="xuatdulieu" xml:space="preserve">
    <value>Export excel</value>
  </data>
</root>